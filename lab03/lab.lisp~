# ; (entre-intervalo 5 '(0 10))

(defun entre-intervalo (number list)
  (dolist (element list)
    (cond ((< number element)
	   (format t "~A e menor que ~A~%" number element))
	  ((> number element)
	   (format t "~A e maior que ~A~%" number element))
	  (t
	   (format t "~A e igual a ~A~%" number element)))))

# ; (max-3 7 3 6)

(defun max-3 (numbers)
  (max))

# ; (restop 10 5 0)

# ; (aprovadop '(13 15.6 5.5 7))

# ; (nota-final '(10 12 15) '(25 25 50))

# ; (produto-somas '(1 2 3) '(2 2 2))

# ; (junta-listas-tamanho-igual '(1 3 4) '(5 3 2))

# ; (dois-ultimos-elementos '(1 2 3 4 5 6 7))

# ; (palindromop '(1 2 3 2 1))

# ; (criar-pares '(1 2 3) '(4 5 6))

# ; (verifica-pares '(1 2 3 4))

# ; (rodar '(1 2 3 4) 'esq)
